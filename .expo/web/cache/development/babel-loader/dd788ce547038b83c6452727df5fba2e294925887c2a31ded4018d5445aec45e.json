{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"theme\"],\n  _excluded2 = [\"elevation\", \"style\", \"backgroundColor\", \"testID\", \"children\"],\n  _excluded3 = [\"position\", \"alignSelf\", \"top\", \"left\", \"right\", \"bottom\", \"start\", \"end\", \"flex\", \"backgroundColor\", \"width\", \"height\", \"transform\", \"opacity\"],\n  _excluded4 = [\"elevation\", \"children\", \"theme\", \"style\", \"testID\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useInternalTheme } from \"../core/theming\";\nimport overlay, { isAnimatedValue } from \"../styles/overlay\";\nimport shadow from \"../styles/shadow\";\nimport { forwardRef } from \"../utils/forwardRef\";\nimport { splitStyles } from \"../utils/splitStyles\";\nvar MD2Surface = forwardRef(function (_ref, ref) {\n  var style = _ref.style,\n    overrideTheme = _ref.theme,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _ref4 = StyleSheet.flatten(style) || {},\n    _ref4$elevation = _ref4.elevation,\n    elevation = _ref4$elevation === void 0 ? 4 : _ref4$elevation;\n  var _useInternalTheme = useInternalTheme(overrideTheme),\n    isDarkTheme = _useInternalTheme.dark,\n    mode = _useInternalTheme.mode,\n    colors = _useInternalTheme.colors;\n  return React.createElement(Animated.View, _extends({\n    ref: ref\n  }, rest, {\n    style: [{\n      backgroundColor: isDarkTheme && mode === 'adaptive' ? overlay(elevation, colors === null || colors === void 0 ? void 0 : colors.surface) : colors === null || colors === void 0 ? void 0 : colors.surface\n    }, elevation ? shadow(elevation) : null, style]\n  }));\n});\nvar shadowColor = '#000';\nvar iOSShadowOutputRanges = [{\n  shadowOpacity: 0.15,\n  height: [0, 1, 2, 4, 6, 8],\n  shadowRadius: [0, 3, 6, 8, 10, 12]\n}, {\n  shadowOpacity: 0.3,\n  height: [0, 1, 1, 1, 2, 4],\n  shadowRadius: [0, 1, 2, 3, 3, 4]\n}];\nvar inputRange = [0, 1, 2, 3, 4, 5];\nfunction getStyleForShadowLayer(elevation, layer) {\n  if (isAnimatedValue(elevation)) {\n    return {\n      shadowColor: shadowColor,\n      shadowOpacity: elevation.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, iOSShadowOutputRanges[layer].shadowOpacity],\n        extrapolate: 'clamp'\n      }),\n      shadowOffset: {\n        width: 0,\n        height: elevation.interpolate({\n          inputRange: inputRange,\n          outputRange: iOSShadowOutputRanges[layer].height\n        })\n      },\n      shadowRadius: elevation.interpolate({\n        inputRange: inputRange,\n        outputRange: iOSShadowOutputRanges[layer].shadowRadius\n      })\n    };\n  }\n  return {\n    shadowColor: shadowColor,\n    shadowOpacity: elevation ? iOSShadowOutputRanges[layer].shadowOpacity : 0,\n    shadowOffset: {\n      width: 0,\n      height: iOSShadowOutputRanges[layer].height[elevation]\n    },\n    shadowRadius: iOSShadowOutputRanges[layer].shadowRadius[elevation]\n  };\n}\nvar SurfaceIOS = forwardRef(function (_ref2, ref) {\n  var elevation = _ref2.elevation,\n    style = _ref2.style,\n    backgroundColor = _ref2.backgroundColor,\n    testID = _ref2.testID,\n    children = _ref2.children,\n    props = _objectWithoutProperties(_ref2, _excluded2);\n  var _React$useMemo = React.useMemo(function () {\n      var _ref5 = StyleSheet.flatten(style) || {},\n        position = _ref5.position,\n        alignSelf = _ref5.alignSelf,\n        top = _ref5.top,\n        left = _ref5.left,\n        right = _ref5.right,\n        bottom = _ref5.bottom,\n        start = _ref5.start,\n        end = _ref5.end,\n        flex = _ref5.flex,\n        backgroundColorStyle = _ref5.backgroundColor,\n        width = _ref5.width,\n        height = _ref5.height,\n        transform = _ref5.transform,\n        opacity = _ref5.opacity,\n        restStyle = _objectWithoutProperties(_ref5, _excluded3);\n      var _splitStyles = splitStyles(restStyle, function (style) {\n          return style.startsWith('margin');\n        }, function (style) {\n          return style.startsWith('border') && style.endsWith('Radius');\n        }),\n        _splitStyles2 = _slicedToArray(_splitStyles, 3),\n        filteredStyles = _splitStyles2[0],\n        marginStyles = _splitStyles2[1],\n        borderRadiusStyles = _splitStyles2[2];\n      if (process.env.NODE_ENV !== 'production' && filteredStyles.overflow === 'hidden' && elevation !== 0) {\n        console.warn('When setting overflow to hidden on Surface the shadow will not be displayed correctly. Wrap the content of your component in a separate View with the overflow style.');\n      }\n      var bgColor = backgroundColorStyle || backgroundColor;\n      var outerLayerViewStyles = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, getStyleForShadowLayer(elevation, 0)), marginStyles), borderRadiusStyles), {}, {\n        position: position,\n        alignSelf: alignSelf,\n        top: top,\n        right: right,\n        bottom: bottom,\n        left: left,\n        start: start,\n        end: end,\n        flex: flex,\n        width: width,\n        height: height,\n        transform: transform,\n        opacity: opacity,\n        backgroundColor: bgColor\n      });\n      var innerLayerViewStyles = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, getStyleForShadowLayer(elevation, 1)), filteredStyles), borderRadiusStyles), {}, {\n        flex: height ? 1 : undefined,\n        backgroundColor: bgColor\n      });\n      return [outerLayerViewStyles, innerLayerViewStyles];\n    }, [style, elevation, backgroundColor]),\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n    outerLayerViewStyles = _React$useMemo2[0],\n    innerLayerViewStyles = _React$useMemo2[1];\n  return React.createElement(Animated.View, {\n    ref: ref,\n    style: outerLayerViewStyles,\n    testID: testID + \"-outer-layer\"\n  }, React.createElement(Animated.View, _extends({}, props, {\n    style: innerLayerViewStyles,\n    testID: testID\n  }), children));\n});\nvar Surface = forwardRef(function (_ref3, ref) {\n  var _ref3$elevation = _ref3.elevation,\n    elevation = _ref3$elevation === void 0 ? 1 : _ref3$elevation,\n    children = _ref3.children,\n    overridenTheme = _ref3.theme,\n    style = _ref3.style,\n    _ref3$testID = _ref3.testID,\n    testID = _ref3$testID === void 0 ? 'surface' : _ref3$testID,\n    props = _objectWithoutProperties(_ref3, _excluded4);\n  var theme = useInternalTheme(overridenTheme);\n  if (!theme.isV3) return React.createElement(MD2Surface, _extends({}, props, {\n    theme: theme,\n    style: style,\n    ref: ref\n  }), children);\n  var colors = theme.colors;\n  var inputRange = [0, 1, 2, 3, 4, 5];\n  var backgroundColor = function () {\n    var _colors$elevation2;\n    if (isAnimatedValue(elevation)) {\n      return elevation.interpolate({\n        inputRange: inputRange,\n        outputRange: inputRange.map(function (elevation) {\n          var _colors$elevation;\n          return (_colors$elevation = colors.elevation) === null || _colors$elevation === void 0 ? void 0 : _colors$elevation[\"level\" + elevation];\n        })\n      });\n    }\n    return (_colors$elevation2 = colors.elevation) === null || _colors$elevation2 === void 0 ? void 0 : _colors$elevation2[\"level\" + elevation];\n  }();\n  if (Platform.OS === 'web') {\n    return React.createElement(Animated.View, _extends({}, props, {\n      ref: ref,\n      testID: testID,\n      style: [{\n        backgroundColor: backgroundColor\n      }, elevation ? shadow(elevation, theme.isV3) : null, style]\n    }), children);\n  }\n  if (Platform.OS === 'android') {\n    var elevationLevel = [0, 3, 6, 9, 12, 15];\n    var getElevationAndroid = function getElevationAndroid() {\n      if (isAnimatedValue(elevation)) {\n        return elevation.interpolate({\n          inputRange: inputRange,\n          outputRange: elevationLevel\n        });\n      }\n      return elevationLevel[elevation];\n    };\n    var _ref6 = StyleSheet.flatten(style) || {},\n      margin = _ref6.margin,\n      padding = _ref6.padding,\n      transform = _ref6.transform,\n      borderRadius = _ref6.borderRadius;\n    var outerLayerStyles = {\n      margin: margin,\n      padding: padding,\n      transform: transform,\n      borderRadius: borderRadius\n    };\n    var sharedStyle = [{\n      backgroundColor: backgroundColor\n    }, style];\n    return React.createElement(Animated.View, _extends({}, props, {\n      testID: testID,\n      ref: ref,\n      style: [{\n        backgroundColor: backgroundColor,\n        transform: transform\n      }, outerLayerStyles, sharedStyle, {\n        elevation: getElevationAndroid()\n      }]\n    }), children);\n  }\n  return React.createElement(SurfaceIOS, _extends({}, props, {\n    elevation: elevation,\n    backgroundColor: backgroundColor,\n    style: style,\n    testID: testID\n  }), children);\n});\nexport default Surface;","map":{"version":3,"names":["React","Animated","Platform","StyleSheet","useInternalTheme","overlay","isAnimatedValue","shadow","forwardRef","splitStyles","MD2Surface","_ref","ref","style","overrideTheme","theme","rest","_objectWithoutProperties","_excluded","_ref4","flatten","_ref4$elevation","elevation","_useInternalTheme","isDarkTheme","dark","mode","colors","createElement","View","_extends","backgroundColor","surface","shadowColor","iOSShadowOutputRanges","shadowOpacity","height","shadowRadius","inputRange","getStyleForShadowLayer","layer","interpolate","outputRange","extrapolate","shadowOffset","width","SurfaceIOS","_ref2","testID","children","props","_excluded2","_React$useMemo","useMemo","_ref5","position","alignSelf","top","left","right","bottom","start","end","flex","backgroundColorStyle","transform","opacity","restStyle","_excluded3","_splitStyles","startsWith","endsWith","_splitStyles2","_slicedToArray","filteredStyles","marginStyles","borderRadiusStyles","process","env","NODE_ENV","overflow","console","warn","bgColor","outerLayerViewStyles","_objectSpread","innerLayerViewStyles","undefined","_React$useMemo2","Surface","_ref3","_ref3$elevation","overridenTheme","_ref3$testID","_excluded4","isV3","_colors$elevation2","map","_colors$elevation","OS","elevationLevel","getElevationAndroid","_ref6","margin","padding","borderRadius","outerLayerStyles","sharedStyle"],"sources":["C:\\Users\\Sinned\\AwesomeProject\\node_modules\\react-native-paper\\src\\components\\Surface.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  ShadowStyleIOS,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useInternalTheme } from '../core/theming';\nimport overlay, { isAnimatedValue } from '../styles/overlay';\nimport shadow from '../styles/shadow';\nimport type { ThemeProp, MD3Elevation } from '../types';\nimport { forwardRef } from '../utils/forwardRef';\nimport { splitStyles } from '../utils/splitStyles';\n\ntype Elevation = 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `Surface`.\n   */\n  children: React.ReactNode;\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Changes shadows and background on iOS and Android.\n   * Used to create UI hierarchy between components.\n   *\n   * Note: In version 2 the `elevation` prop was accepted via `style` prop i.e. `style={{ elevation: 4 }}`.\n   * It's no longer supported with theme version 3 and you should use `elevation` property instead.\n   */\n  elevation?: Elevation;\n  /**\n   * @optional\n   */\n  theme?: ThemeProp;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  ref?: React.RefObject<View>;\n};\n\nconst MD2Surface = forwardRef<View, Props>(\n  ({ style, theme: overrideTheme, ...rest }: Omit<Props, 'elevation'>, ref) => {\n    const { elevation = 4 } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n    const { dark: isDarkTheme, mode, colors } = useInternalTheme(overrideTheme);\n\n    return (\n      <Animated.View\n        ref={ref}\n        {...rest}\n        style={[\n          {\n            backgroundColor:\n              isDarkTheme && mode === 'adaptive'\n                ? overlay(elevation, colors?.surface)\n                : colors?.surface,\n          },\n          elevation ? shadow(elevation) : null,\n          style,\n        ]}\n      />\n    );\n  }\n);\n\nconst shadowColor = '#000';\nconst iOSShadowOutputRanges = [\n  {\n    shadowOpacity: 0.15,\n    height: [0, 1, 2, 4, 6, 8],\n    shadowRadius: [0, 3, 6, 8, 10, 12],\n  },\n  {\n    shadowOpacity: 0.3,\n    height: [0, 1, 1, 1, 2, 4],\n    shadowRadius: [0, 1, 2, 3, 3, 4],\n  },\n];\nconst inputRange = [0, 1, 2, 3, 4, 5];\nfunction getStyleForShadowLayer(\n  elevation: Elevation,\n  layer: 0 | 1\n): Animated.WithAnimatedValue<ShadowStyleIOS> {\n  if (isAnimatedValue(elevation)) {\n    return {\n      shadowColor,\n      shadowOpacity: elevation.interpolate({\n        inputRange: [0, 1],\n        outputRange: [0, iOSShadowOutputRanges[layer].shadowOpacity],\n        extrapolate: 'clamp',\n      }),\n      shadowOffset: {\n        width: 0,\n        height: elevation.interpolate({\n          inputRange,\n          outputRange: iOSShadowOutputRanges[layer].height,\n        }),\n      },\n      shadowRadius: elevation.interpolate({\n        inputRange,\n        outputRange: iOSShadowOutputRanges[layer].shadowRadius,\n      }),\n    };\n  }\n\n  return {\n    shadowColor,\n    shadowOpacity: elevation ? iOSShadowOutputRanges[layer].shadowOpacity : 0,\n    shadowOffset: {\n      width: 0,\n      height: iOSShadowOutputRanges[layer].height[elevation],\n    },\n    shadowRadius: iOSShadowOutputRanges[layer].shadowRadius[elevation],\n  };\n}\n\nconst SurfaceIOS = forwardRef<\n  View,\n  Omit<Props, 'elevation'> & {\n    elevation: Elevation;\n    backgroundColor?: string | Animated.AnimatedInterpolation<string | number>;\n  }\n>(({ elevation, style, backgroundColor, testID, children, ...props }, ref) => {\n  const [outerLayerViewStyles, innerLayerViewStyles] = React.useMemo(() => {\n    const {\n      position,\n      alignSelf,\n      top,\n      left,\n      right,\n      bottom,\n      start,\n      end,\n      flex,\n      backgroundColor: backgroundColorStyle,\n      width,\n      height,\n      transform,\n      opacity,\n      ...restStyle\n    } = (StyleSheet.flatten(style) || {}) as ViewStyle;\n\n    const [filteredStyles, marginStyles, borderRadiusStyles] = splitStyles(\n      restStyle,\n      (style) => style.startsWith('margin'),\n      (style) => style.startsWith('border') && style.endsWith('Radius')\n    );\n\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      filteredStyles.overflow === 'hidden' &&\n      elevation !== 0\n    ) {\n      console.warn(\n        'When setting overflow to hidden on Surface the shadow will not be displayed correctly. Wrap the content of your component in a separate View with the overflow style.'\n      );\n    }\n\n    const bgColor = backgroundColorStyle || backgroundColor;\n\n    const outerLayerViewStyles = {\n      ...getStyleForShadowLayer(elevation, 0),\n      ...marginStyles,\n      ...borderRadiusStyles,\n      position,\n      alignSelf,\n      top,\n      right,\n      bottom,\n      left,\n      start,\n      end,\n      flex,\n      width,\n      height,\n      transform,\n      opacity,\n      backgroundColor: bgColor,\n    };\n\n    const innerLayerViewStyles = {\n      ...getStyleForShadowLayer(elevation, 1),\n      ...filteredStyles,\n      ...borderRadiusStyles,\n      flex: height ? 1 : undefined,\n      backgroundColor: bgColor,\n    };\n\n    return [outerLayerViewStyles, innerLayerViewStyles];\n  }, [style, elevation, backgroundColor]);\n\n  return (\n    <Animated.View\n      ref={ref}\n      style={outerLayerViewStyles}\n      testID={`${testID}-outer-layer`}\n    >\n      <Animated.View {...props} style={innerLayerViewStyles} testID={testID}>\n        {children}\n      </Animated.View>\n    </Animated.View>\n  );\n});\n\n/**\n * Surface is a basic container that can give depth to an element with elevation shadow.\n * On dark theme with `adaptive` mode, surface is constructed by also placing a semi-transparent white overlay over a component surface.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/docs/guides/theming#dark-theme) for more information.\n * Overlay and shadow can be applied by specifying the `elevation` property both on Android and iOS.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/surface-android.png\" />\n *     <figcaption>Surface on Android</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/surface-ios.png\" />\n *     <figcaption>Surface on iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Surface, Text } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * const MyComponent = () => (\n *   <Surface style={styles.surface} elevation={4}>\n *      <Text>Surface</Text>\n *   </Surface>\n * );\n *\n * export default MyComponent;\n *\n * const styles = StyleSheet.create({\n *   surface: {\n *     padding: 8,\n *     height: 80,\n *     width: 80,\n *     alignItems: 'center',\n *     justifyContent: 'center',\n *   },\n * });\n * ```\n */\nconst Surface = forwardRef<View, Props>(\n  (\n    {\n      elevation = 1,\n      children,\n      theme: overridenTheme,\n      style,\n      testID = 'surface',\n      ...props\n    }: Props,\n    ref\n  ) => {\n    const theme = useInternalTheme(overridenTheme);\n\n    if (!theme.isV3)\n      return (\n        <MD2Surface {...props} theme={theme} style={style} ref={ref}>\n          {children}\n        </MD2Surface>\n      );\n\n    const { colors } = theme;\n\n    const inputRange = [0, 1, 2, 3, 4, 5];\n\n    const backgroundColor = (() => {\n      if (isAnimatedValue(elevation)) {\n        return elevation.interpolate({\n          inputRange,\n          outputRange: inputRange.map((elevation) => {\n            return colors.elevation?.[`level${elevation as MD3Elevation}`];\n          }),\n        });\n      }\n\n      return colors.elevation?.[`level${elevation}`];\n    })();\n\n    if (Platform.OS === 'web') {\n      return (\n        <Animated.View\n          {...props}\n          ref={ref}\n          testID={testID}\n          style={[\n            { backgroundColor },\n            elevation ? shadow(elevation, theme.isV3) : null,\n            style,\n          ]}\n        >\n          {children}\n        </Animated.View>\n      );\n    }\n\n    if (Platform.OS === 'android') {\n      const elevationLevel = [0, 3, 6, 9, 12, 15];\n\n      const getElevationAndroid = () => {\n        if (isAnimatedValue(elevation)) {\n          return elevation.interpolate({\n            inputRange,\n            outputRange: elevationLevel,\n          });\n        }\n\n        return elevationLevel[elevation];\n      };\n\n      const { margin, padding, transform, borderRadius } = (StyleSheet.flatten(\n        style\n      ) || {}) as ViewStyle;\n\n      const outerLayerStyles = { margin, padding, transform, borderRadius };\n      const sharedStyle = [{ backgroundColor }, style];\n\n      return (\n        <Animated.View\n          {...props}\n          testID={testID}\n          ref={ref}\n          style={[\n            {\n              backgroundColor,\n              transform,\n            },\n            outerLayerStyles,\n            sharedStyle,\n            {\n              elevation: getElevationAndroid(),\n            },\n          ]}\n        >\n          {children}\n        </Animated.View>\n      );\n    }\n\n    return (\n      <SurfaceIOS\n        {...props}\n        elevation={elevation}\n        backgroundColor={backgroundColor}\n        style={style}\n        testID={testID}\n      >\n        {children}\n      </SurfaceIOS>\n    );\n  }\n);\n\nexport default Surface;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}