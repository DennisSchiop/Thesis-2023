{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useState } from 'react';\nimport { Container } from \"react-native-web/dist/index\";\nimport { Box } from \"react-native-web/dist/index\";\nimport { Typography } from \"react-native-web/dist/index\";\nimport { TextField } from \"react-native-web/dist/index\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Stack } from \"react-native-web/dist/index\";\nimport { purple } from '@mui/material/colors';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginPage = function LoginPage() {\n  var navigation = useNavigation();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    walletAddress = _useState2[0],\n    setWalletAddress = _useState2[1];\n  var handleLogin = function handleLogin() {\n    if (walletAddress) {\n      navigation.navigate('User');\n    }\n  };\n  return _jsx(Container, {\n    children: _jsxs(Box, {\n      style: {\n        minHeight: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: purple[50]\n      },\n      children: [_jsx(AccountCircleIcon, {\n        style: {\n          fontSize: 100,\n          color: purple[900]\n        }\n      }), _jsx(Typography, {\n        style: {\n          fontWeight: 'bold',\n          color: purple[900],\n          marginBottom: 10\n        },\n        children: \"Sneak-Check\"\n      }), _jsx(Typography, {\n        style: {\n          color: purple[800],\n          marginBottom: 20\n        },\n        children: \"Log in with your wallet address\"\n      }), _jsx(TextField, {\n        label: \"Wallet Address\",\n        placeholder: \"Enter your wallet address\",\n        fullWidth: true,\n        variant: \"outlined\",\n        style: {\n          marginBottom: 20\n        },\n        value: walletAddress,\n        onChangeText: function onChangeText(text) {\n          return setWalletAddress(text);\n        }\n      }), _jsxs(Stack, {\n        style: {\n          flexDirection: 'row',\n          width: '100%'\n        },\n        spacing: 2,\n        children: [_jsx(Button, {\n          title: \"Log in as User\",\n          color: purple[700],\n          onPress: handleLogin\n        }), _jsx(Button, {\n          title: \"Log in as Company\",\n          color: purple[900],\n          onPress: function onPress() {\n            return console.log('Log in as Company');\n          }\n        })]\n      })]\n    })\n  });\n};\nexport default LoginPage;","map":{"version":3,"names":["useNavigation","useState","Container","Box","Typography","TextField","Button","Stack","purple","AccountCircleIcon","jsx","_jsx","jsxs","_jsxs","LoginPage","navigation","_useState","_useState2","_slicedToArray","walletAddress","setWalletAddress","handleLogin","navigate","children","style","minHeight","display","flexDirection","justifyContent","alignItems","backgroundColor","fontSize","color","fontWeight","marginBottom","label","placeholder","fullWidth","variant","value","onChangeText","text","width","spacing","title","onPress","console","log"],"sources":["C:/Users/Sinned/AwesomeProject/LoginPage.js"],"sourcesContent":["import { useNavigation } from '@react-navigation/native';\r\nimport { useState } from 'react';\r\nimport { Container, Box, Typography, TextField, Button, Stack } from 'react-native';\r\nimport { purple } from '@mui/material/colors';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\n\r\n\r\nconst LoginPage = () => {\r\n  const navigation = useNavigation();\r\n  const [walletAddress, setWalletAddress] = useState('');\r\n\r\n  const handleLogin = () => {\r\n    // Replace this with your own logic to check the wallet address\r\n\r\n    if (walletAddress) {\r\n      navigation.navigate('User');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box\r\n        style={{\r\n          minHeight: '100%',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          backgroundColor: purple[50],\r\n        }}\r\n      >\r\n        <AccountCircleIcon style={{ fontSize: 100, color: purple[900] }} />\r\n        <Typography style={{ fontWeight: 'bold', color: purple[900], marginBottom: 10 }}>\r\n          Sneak-Check\r\n        </Typography>\r\n        <Typography style={{ color: purple[800], marginBottom: 20 }}>\r\n          Log in with your wallet address\r\n        </Typography>\r\n        <TextField\r\n          label=\"Wallet Address\"\r\n          placeholder=\"Enter your wallet address\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          style={{ marginBottom: 20 }}\r\n          value={walletAddress}\r\n          onChangeText={(text) => setWalletAddress(text)}\r\n        />\r\n        <Stack style={{ flexDirection: 'row', width: '100%' }} spacing={2}>\r\n          <Button\r\n            title=\"Log in as User\"\r\n            color={purple[700]}\r\n            onPress={handleLogin}\r\n          />\r\n          <Button\r\n            title=\"Log in as Company\"\r\n            color={purple[900]}\r\n            onPress={() => console.log('Log in as Company')}\r\n          />\r\n        </Stack>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n\r\n"],"mappings":";AAAA,SAASA,aAAa,QAAQ,0BAA0B;AACxD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SACxBC,SAAS;AAAA,SAAEC,GAAG;AAAA,SAAEC,UAAU;AAAA,SAAEC,SAAS;AAAA,OAAAC,MAAA;AAAA,SAAUC,KAAK;AAC7D,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,OAAOC,iBAAiB,MAAM,mCAAmC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGlE,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EACtB,IAAMC,UAAU,GAAGf,aAAa,EAAE;EAClC,IAAAgB,SAAA,GAA0Cf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/CG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EAEtC,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IAGxB,IAAIF,aAAa,EAAE;MACjBJ,UAAU,CAACO,QAAQ,CAAC,MAAM,CAAC;IAC7B;EACF,CAAC;EAED,OACEX,IAAA,CAACT,SAAS;IAAAqB,QAAA,EACRV,KAAA,CAACV,GAAG;MACFqB,KAAK,EAAE;QACLC,SAAS,EAAE,MAAM;QACjBC,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE,QAAQ;QACvBC,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE,QAAQ;QACpBC,eAAe,EAAEtB,MAAM,CAAC,EAAE;MAC5B,CAAE;MAAAe,QAAA,GAEFZ,IAAA,CAACF,iBAAiB;QAACe,KAAK,EAAE;UAAEO,QAAQ,EAAE,GAAG;UAAEC,KAAK,EAAExB,MAAM,CAAC,GAAG;QAAE;MAAE,EAAG,EACnEG,IAAA,CAACP,UAAU;QAACoB,KAAK,EAAE;UAAES,UAAU,EAAE,MAAM;UAAED,KAAK,EAAExB,MAAM,CAAC,GAAG,CAAC;UAAE0B,YAAY,EAAE;QAAG,CAAE;QAAAX,QAAA,EAAC;MAEjF,EAAa,EACbZ,IAAA,CAACP,UAAU;QAACoB,KAAK,EAAE;UAAEQ,KAAK,EAAExB,MAAM,CAAC,GAAG,CAAC;UAAE0B,YAAY,EAAE;QAAG,CAAE;QAAAX,QAAA,EAAC;MAE7D,EAAa,EACbZ,IAAA,CAACN,SAAS;QACR8B,KAAK,EAAC,gBAAgB;QACtBC,WAAW,EAAC,2BAA2B;QACvCC,SAAS;QACTC,OAAO,EAAC,UAAU;QAClBd,KAAK,EAAE;UAAEU,YAAY,EAAE;QAAG,CAAE;QAC5BK,KAAK,EAAEpB,aAAc;QACrBqB,YAAY,EAAE,SAAAA,aAACC,IAAI;UAAA,OAAKrB,gBAAgB,CAACqB,IAAI,CAAC;QAAA;MAAC,EAC/C,EACF5B,KAAA,CAACN,KAAK;QAACiB,KAAK,EAAE;UAAEG,aAAa,EAAE,KAAK;UAAEe,KAAK,EAAE;QAAO,CAAE;QAACC,OAAO,EAAE,CAAE;QAAApB,QAAA,GAChEZ,IAAA,CAACL,MAAM;UACLsC,KAAK,EAAC,gBAAgB;UACtBZ,KAAK,EAAExB,MAAM,CAAC,GAAG,CAAE;UACnBqC,OAAO,EAAExB;QAAY,EACrB,EACFV,IAAA,CAACL,MAAM;UACLsC,KAAK,EAAC,mBAAmB;UACzBZ,KAAK,EAAExB,MAAM,CAAC,GAAG,CAAE;UACnBqC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;UAAA;QAAC,EAChD;MAAA,EACI;IAAA;EACJ,EACI;AAEhB,CAAC;AAED,eAAejC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}